os:
  - linux
  - osx

dist: xenial

env:
  - MPI_LIBRARY=openmpi
  - MPI_LIBRARY=mpich

cache:
  directories:
  - mpich-3.3.1-build
  - openmpi-4.0.1-build

services:
  - xvfb

language: cpp

compiler:
  - clang
  - gcc

addons:
  homebrew:
    update: true
    packages:
      - cmake
  apt:
    update: true
    packages:
      - cmake
      - python3
      - python3-numpy
      - python3-matplotlib
      - python3-tk

install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]
    then
      pip3 install --user matplotlib
    fi
  - |
    if [ "$MPI_LIBRARY" = "openmpi" ]
    then
      if [ -f "openmpi-4.0.1-build/bin/mpiexec" ]
      then
        echo "mpiexec found, nothing to build"
      else
        echo "Downloading openmpi source."
        wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.1.tar.gz
        tar -xzf openmpi-4.0.1.tar.gz
        rm openmpi-4.0.1.tar.gz
        echo "Configuring and building openmpi source."
        cd openmpi-4.0.1
        ../configure --prefix="$(pwd)/../openmpi-4.0.1-build"
        make -j6
        make install
        cd -
        rm -rf openmpi-4.0.1
      fi
      export PATH="$(pwd)/openmpi-4.0.1-build/bin:$PATH"
      export LD_LIBRARY_PATH="$(pwd)/openmpi-4.0.1-build/bin:$LD_LIBRARY_PATH"
    elif [ "$MPI_LIBRARY" = "mpich" ]
    then
      if [ -f "mpich-3.3.1-build/bin/mpiexec" ]
      then
        echo "mpiexec found, nothing to build"
      else
        echo "Downloading mpich source."
        wget http://www.mpich.org/static/downloads/3.3.1/mpich-3.3.1.tar.gz
        tar -xzf mpich-3.3.1.tar.gz
        rm mpich-3.3.1.tar.gz
        echo "Configuring and building mpich source."
        cd mpich-3.3.1
        ../configure --prefix="$(pwd)/../mpich-3.3.1-build" --disable-fortran
        make -j6
        make install
        cd -
        rm -rf mpich-3.3.1
      fi
      export PATH="$(pwd)/mpich-3.3.1-build/bin:$PATH"
      export LD_LIBRARY_PATH="$(pwd)/mpich-3.3.1-build/bin:$LD_LIBRARY_PATH"
    fi

script:
  - mkdir build && cd build && cmake .. && make -j6 && ctest --verbose
  - cd scaling && ./run-scaling.sh
  - cd ../examples/biased-coin-flip && ./run-cpp-abc-rejection-serial-example.sh
  - ./run-cpp-abc-smc-serial-example.sh
  - ./run-python-abc-rejection-serial-example.sh
  - ./run-python-abc-smc-serial-example.sh
  - cd ../sis-model && ./run-abc-rejection-serial-example.sh
  - ./run-abc-smc-serial-example.sh
