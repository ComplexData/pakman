os:
  - linux
  - osx

dist: xenial

env:
  - MPI_LIBRARY=openmpi
  - MPI_LIBRARY=mpich

services:
  - xvfb

language: cpp

compiler:
  - clang
  - gcc

addons:
  homebrew:
    update: true
    packages:
    - cmake
  apt:
    update: true
    packages:
      - cmake
      - python3
      - python3-numpy
      - python3-matplotlib
      - python3-tk

install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]
    then
      pip3 install --user matplotlib
    fi
  - |
    pushd "$HOME"
    if [ "$MPI_LIBRARY" = "openmpi" ]
    then
      wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.1.tar.gz
      tar -xzf openmpi-4.0.1.tar.gz
      rm openmpi-4.0.1.tar.gz
      mkdir openmpi-4.0.1-build
      cd openmpi-4.0.1
      mkdir build
      cd build
      ../configure --prefix="$HOME/openmpi-4.0.1-build"
      make -j6
      make install
      cd
      rm -rf openmpi-4.0.1
      export PATH="$HOME/openmpi-4.0.1-build/bin:$PATH"
      export LD_LIBRARY_PATH="$HOME/openmpi-4.0.1-build/bin:$LD_LIBRARY_PATH"
    elif [ "$MPI_LIBRARY" = "mpich" ]
    then
      wget http://www.mpich.org/static/downloads/3.3.1/mpich-3.3.1.tar.gz
      tar -xzf mpich-3.3.1.tar.gz
      rm mpich-3.3.1.tar.gz
      mkdir mpich-3.3.1-build
      cd mpich-3.3.1
      mkdir build
      cd build
      ../configure --prefix="$HOME/mpich-3.3.1-build" --disable-fortran
      make -j6
      make install
      cd
      rm -rf mpich-3.3.1
      export PATH="$HOME/mpich-3.3.1-build/bin:$PATH"
      export LD_LIBRARY_PATH="$HOME/mpich-3.3.1-build/bin:$LD_LIBRARY_PATH"
    fi
    popd

script:
  - mkdir build && cd build && cmake .. && make -j6 && ctest --verbose
  - cd scaling && ./run-scaling.sh
  - cd ../examples/biased-coin-flip && ./run-cpp-abc-rejection-serial-example.sh
  - ./run-cpp-abc-smc-serial-example.sh
  - ./run-python-abc-rejection-serial-example.sh
  - ./run-python-abc-smc-serial-example.sh
